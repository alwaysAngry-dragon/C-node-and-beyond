> Saving:
When you save the file test.txt with the content "Hi!", the following happens:

    Each character (H, i, !) is converted into its UTF-8 binary representation.
    The binary data is written to the file as raw bytes:
        01001000 → Byte 0x48
        01101001 → Byte 0x69
        00100001 → Byte 0x21
    The file test.txt will contain exactly these three bytes (0x48, 0x69, 0x21) in sequence.

> Reading:
When you read the file using Node.js (or any other program), the raw bytes are interpreted based on the encoding you specify:

    - If you read the file as UTF-8 , the bytes are decoded back into their corresponding characters (H, i, !).
    - If you read the file as binary , you get the raw bytes (0x48, 0x69, 0x21).




> UTF-8 (Unicode Transformation Format - 8-bit) is a variable-length encoding for Unicode characters. 
    It represents characters using 1 to 4 bytes, depending on the character:

        - ASCII characters (values 0 to 127) are encoded using 1 byte .
        - Characters outside the ASCII range (e.g., accented letters, symbols, emojis) may use 2, 3, or 4 bytes .